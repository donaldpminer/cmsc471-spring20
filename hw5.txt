HOMEWORK #5 -  Random Forests on Census Data
Due 4/15

Overview:
The purpose of this assignment is to implement some machine learning models on a income data set.
Your projects can be done in any language, but I strongly recommend using the scikitlearn package in Python.

Email you projects to jlag1@umbc.edu and don1@umbc.edu with the title CMSC471 - Homework 5 - [STUDENT NAME].


The data set you will use is: https://archive.ics.uci.edu/ml/datasets/Census+Income

You'll use all of the features as input variables.
You are to predict whether someone makes more than $50k or less than $50k.

Random Forest documentation for scikitlearn:
https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html
There is some sample code in there too.

General steps for doing this at first
 - Load up the training set -- adult.data -- it's CSV so you can look up how to do that. 
   It seems pretty simple just comma separated where you can just split on commas.
 - Load up the test set -- adult.text -- it's the same format, but keep these out from your
   training set and it'll be what we use for testing
 - Instantiate the Random Forest Classifier (look up docs on how to do that)
   This is when you'll specify the parameters. Start out with the defaults
 - Train the random forest on the adult.data file
 - Test for accuracy on the adult.text file, find accuracy %

Write a basic report that contains the following information:
 - Tweak the parameters of the random forest classifier -- mostly the number of trees, max depth, coefficient used -- 
   then write up a table that shows the accuracy numbers changing along with what parameters you used. Try at
   least 10 different parameters, but try to get your accuracy up in general.
 - Check out the "feature importances" (there is some stuff in the docts about this) -- what are the feature
   importances for your most accurate model? What does this tell you?
 - For each feature (there are about 14), remove them one at a time. Retrain the model with that feature missing.
   How much does accuracy dip for each one? What does this tell you about each feature? Make some conclusions
   about what features are important.


Extra Credit:
 - Use three different classifiers than Random Forests and see how they do. Try hard on parameter tuning to get them to beat random forests.
 - Compare the performance between Random Forests and these other approaches.
 - Write up a few sentences on each approach and explain why you think Random Forests might perform better or worse than each of these.


